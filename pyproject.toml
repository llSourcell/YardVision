[tool.poetry]
name = "yardvision"
version = "0.1.0"
description = "YardVision: an edge-deployable computer vision application"
authors = ["Your Name <you@example.com>"]
license = "MIT"
readme = "README.md"
packages = [{ include = "yardvision", from = "src" }, { include = "vision", from = "src" }]

[tool.poetry.dependencies]
python = "^3.11"
typer = {version = "^0.12.3", extras = ["all"]}
rich = "^13.7.1"
loguru = "^0.7.2"
pydantic = "^2.7.1"
python-dotenv = "^1.0.1"
numpy = "^2.0.0"
opencv-python-headless = "^4.9.0.80"
Pillow = "^10.4.0"
onnxruntime = "^1.18.0"
tqdm = "^4.66.4"
ultralytics = "^8.2.0"
supervision = "^0.18.0"

[tool.poetry.group.dev.dependencies]
pytest = "^8.2.1"
pytest-cov = "^5.0.0"
mypy = "^1.10.0"
ruff = "^0.5.0"
pre-commit = "^3.7.1"
types-Pillow = "^10.2.0.20240822"

[tool.poetry.scripts]
yardvision = "yardvision.cli:app"

[tool.ruff]
line-length = 100
target-version = "py311"
extend-exclude = [
    ".venv",
    "dist",
    "build",
]

[tool.ruff.lint]
select = [
    "E", "F", "I", "UP", "B", "SIM", "PL", "C90"
]
ignore = [
    # Sometimes Typer functions can look unused due to dynamic dispatch
    "ARG001",
]
fixable = ["ALL"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.pytest.ini_options]
addopts = "-ra -q"
testpaths = ["tests"]

[tool.mypy]
python_version = "3.11"
strict = true
warn_unused_configs = true
warn_return_any = true
warn_unreachable = true
show_error_codes = true
pretty = true
mypy_path = ["src"]
exclude = [
    "build",
    "dist",
    "\.venv",
]

[tool.mypy.cv2]
ignore_missing_imports = true

[tool.mypy.loguru]
ignore_missing_imports = true

[tool.mypy.rich.*]
ignore_missing_imports = true

[tool.mypy.tqdm.*]
ignore_missing_imports = true

[tool.mypy.onnxruntime.*]
ignore_missing_imports = true

[tool.mypy.ultralytics.*]
ignore_missing_imports = true

[tool.mypy.supervision.*]
ignore_missing_imports = true

[build-system]
requires = ["poetry-core>=1.8.0"]
build-backend = "poetry.core.masonry.api"

